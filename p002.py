#

import os,logging

def SumEven(l):
    ''' sum the even numbers in list l'''
    mysum = 0
    for i in l:
        if i%2 == 0:
            mysum += i
    return mysum

def SumEvenFibonacci(cap=10, verbosity=0):
    lastfib = 2
    nextfib = 3
    evensum = 2
    while (nextfib<cap):
        if nextfib % 2 == 0:
            evensum += nextfib
        if verbosity > 1:
            logging.debug('fib:{}, even sum={}'.format(nextfib, evensum))
        lastfib, nextfib = nextfib, lastfib + nextfib
    return evensum

def main(args):
    description = '''
    Even Fibonacci numbers

    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    '''

    if args.test:
        cap = 100
    else:
        cap = 1000*1000*4

    even_sum = SumEvenFibonacci(cap, args.verbosity)
    solution = 'sum of Even Fibonacci numbers that below {} is {}'.format(cap, even_sum)
    logging.info(solution)
